name: Deploy to S3

on:
  workflow_dispatch:

  push:
    branches: 
      - main

  pull_request:
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main'

    permissions:
      id-token: write
      contents: read

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install packages
        run: npm ci

      - name: Build project and Export static files
        run: npm run build && npm run export

      # - name: Build project
      #   run: npm run build

      # - name: Export static files
      #   run: npm run export

      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: artifact
      #     path: out

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy app to S3 bucket
        continue-on-error: true
        run: aws s3 sync ./out ${{ secrets.AWS_BUCKET }} --delete

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   # if: github.ref == 'refs/heads/main'

  #   permissions:
  #     id-token: write
  #     contents: read

  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: artifact

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1-node16
  #       with:
  #         role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  #         aws-region: ${{ secrets.AWS_REGION }}

  #     - name: Deploy app to S3 bucket
  #       run: aws s3 sync . ${{ secrets.AWS_BUCKET }} --delete

  invalidate-cache:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"